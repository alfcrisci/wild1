\documentclass{article}

%\VignetteIndexEntry{Home range estimation}
%\VignetteDepends{ wild1 }
%\VignetteKeyword{ graphics }
 
\usepackage{graphics}
\usepackage{hyperref}
\hypersetup{colorlinks,urlcolor=blue,linkcolor=white}
\usepackage[font=small,format=plain,labelfont=bf,up,textfont=it,up]{caption}


\usepackage{hanging}

%Allows comments and prevents reformatting of code (from Ihaka 2009)
%Note that Ihaka (2009) gives this as "FALSE," which is, I think, incorrect.
\SweaveOpts{keep.source=TRUE}

%First line of paragraph not indented
\setlength{\parindent}{0in}

\begin{document}

<<echo=false,results=hide>>=
options(continue=" ",width=60,digits=2)
options(useFancyQuotes=FALSE)  #Fixes problems with character substitution
options(SweaveHooks=list(fig=function()
par(mar=c(5.1, 4.1, 1.1, 2.1))))
@

\title{Home range estimation}
\author{Glen A. Sargeant\\[0.10cm]
USGS Northern Prairie Wildlife Research Center\\[0.10cm]
\texttt{gsargeant@usgs.gov}\\}

\maketitle

Package \textsf{wild1} includes \texttt{hr.mcp}, a function for computing minimum convex polygon home ranges.  Although other routines are available for home range calculation with R, this one integrates classes and functions for spatial data to provide features not found elsewhere.  These include 1) clipping of home range boundaries to coincide with study area boundaries, 2) restriction of the domain for data, and 3) use of a robust measure of location for identification of "outliers."   This vignette describes \texttt{hr.mcp} and presents a series of examples.\\

\section*{Software}
Package \textsf{wild1} and required supporting packages must be installed prior to use.  To install \textsf{wild1}, copy the file \texttt{wild1.zip} (available at \url{http://www.npwrc.usgs.gov/staff/sargeant.htm}) to your preferred location, initiate an R session, and use the pull-down "Packages" menu (\texttt{\textsl{Packages>Install package(s) from local zip files}}).\\

See the package description for a current list of required supporting packages (available from CRAN, the Comprehensive R Archive Network, via the pull-down "Packages" menu).  The package description is included with the package documentation (accessible via the pull-down "Help" menu) and can also be viewed with \texttt{packageDescription("wild1)}.\\ 

Installed packages must be loaded at the start of each R session or they will not be available for use.  Either \texttt{require()} or \texttt{library()} may be used to load \textsf{wild1}.  Loading \textsf{wild1} will automatically load supporting packages.
<<results=hide>>= 
require(wild1)
@

\section*{Minimum convex polygons}

Examples that follow rely on 1) a data frame containing coordinates of locations used by elk and on 2) a spatial object that describes the boundary of Wind Cave National Park, and 3) objects of class "\texttt{gpc.poly}"\{\textsf{gpclib}\} that describe the park boundary and a "hole" (polygonal region to be excluded from the park).\\

Loads the data and 3 maps:
<<>>=
data(xy.elk)
data(wica.gpc)
data(hole.gpc)
data(wica.hole.gpc)
@ 

Locations can be described by 2 coordinate vectors or, as in this case, by a matrix.  At present, coordinates must describe locations relative to a square grid (e.g., UTM grid).
<<>>=
str(xy.elk,strict.width="cut")
@

Any study area defined by a single polygon may be described by a matrix, a list, or an object of class \texttt{"gpc.poly"} (see package \textsf{gpclib} for a description of the class).  Study areas described by multiple polygons must be described by lists or objects of class \texttt{"gpc.poly"}.  Objects of class \texttt{"gpc.poly"} can be constructed from matrices (single polygon) and lists (multiple polygons) with \texttt{as(\textit{object},"gpc.poly")}.
<<>>=
str(wica.gpc)
str(hole.gpc)
str(wica.hole.gpc)
@ 


Executing \texttt{hr.mcp} creates an object of class \texttt{"hr.mcp"}.  Output includes \texttt{id}, an optional identifier for the estimate; \texttt{exclude}, the proportion of outlying locations to be excluded from calculations; an object of class \texttt{"gpc.poly"} that includes coordinates for vertices of an mcp home range; and \texttt{area}, area of the mcp (in squared axis units).  By default (\texttt{plot=TRUE}), the function also produces a diagnostic plot (Fig. 1).
<<mcp1, fig=TRUE, include=FALSE>>=
mcp1 <- hr.mcp(x=xy.elk,id="Example 1")
str(mcp1)
@

\begin{figure}[htb]
\begin{center}
\includegraphics[width=2.5in]{mcp-mcp1}
\caption{Diagnostic plot produced by \texttt{hr.mcp}.}
\end{center}
\end{figure}

\section*{Excluding influential or inadmissible values}
Excluding observations from home range calculations is common practice and \texttt{hr.mcp} provides 3 options (Fig. 2):

\begin{enumerate}
\item Exclude a specified proportion of points that lie furthest from the spatial median of coordinates.  This approach is the default because it is robust to the influence of far-flung points such as may arise from recording errors.

<<>>=
mcp2 <- hr.mcp(xy.elk,exclude=0.05)
@
  
\item Exclude points that lie furthest from the barycenter (arithmetic mean of coordinates).  Implemented primarily for comparison with other packages.

<<>>=
mcp3 <- hr.mcp(xy.elk,exclude=0.05,method="mean")
@

\item Exclude points that lie within inadmissible regions (e.g., a terrestrial mammal located in a lake or at sea).
<<>>=
mcp4 <- hr.mcp(xy.elk,domain=wica.gpc)
@
\end{enumerate}

<<ExclComp,fig=T,include=F,echo=F,results=hide>>=
plot(xy.elk,pch=19,col="salmon",type="n",axes=F,xlab="",ylab="")
plot(mcp1,lty=1,lwd=3,border="black",col=gray(0.90),add=TRUE)
plot(mcp2,lty=2,lwd=3,border="red",add=TRUE)
plot(mcp3,lty=2,lwd=3,border="blue",add=TRUE)
plot(mcp4,lty=2,lwd=3,border="green4",add=TRUE)
plot(wica.gpc,add=TRUE)
leg <- c("Unrestricted","95% spatial median","95% barycenter","Restricted domain")
legend(x="topleft",legend=leg,col=c("black","red","blue","green4"),lty=c(1,2,2,2),lwd=2)
box()
@

\begin{figure}[htb]
\begin{center}
\includegraphics[width=2.5in]{mcp-ExclComp}
\caption{Available criteria for identifying "outliers" and inadmissible points include distance from the spatial median, distance from the barycenter, and restriction of the domain to points within, e.g., Wind Cave National Park.}
\end{center}
\end{figure}


\section*{Home range clipping}
Once computed, home ranges can be "clipped" so that boundaries coincide with boundaries of polygons described by a matrix (single polygon), list, or object of class \texttt{"gpc.poly"}.  In the following example, all of the data have been used to calculate a home range, but the result has been clipped so it does not extend beyond the boundary of Wind Cave National Park (Fig. 3).

<<clip,fig=T,include=F,results=hide>>=
hr.mcp(xy.elk,clip.to=wica.gpc)
@
\begin{figure}[htb]
\begin{center}
\includegraphics[width=2.5in]{mcp-clip}
\caption{An example of home range clipping.}
\end{center}
\end{figure}

\section*{Home range area}
Components of home range objects can be extracted and used for subsequent calculations.  For example, the component \texttt{'n'} provides information about sample sizes (number of data points, number removed by restricting the domain, number excluded by trimming outlying points, and number used in computations):
<<>>=
mcp4$n
@ 

The \texttt{area} component provides the home range area in squared axis units (converted from square meters to square kilometers by division in the example below).
<<>>=
mcp4$area/(1000^2)
@ 

In many cases, study areas are not contiguous or enclose areas that are obviously inaccessible or unsuitable (e.g., lakes, towns, fenced areas).  Investigators may wish to exclude such areas when computing estimates of home range size.  If \texttt{clip.to} is specified, home range estimates are adjusted automatically.\\

Consider \texttt{wica.hole.gpc}, an object of class \texttt{"gpc.poly"} that describes 2 polygons, 1 of which represents a hole.
<<>>=
data(wica.hole.gpc)
str(wica.hole.gpc)
@

Home range clipped to the park boundary:
<<>>=
mcp5 <- hr.mcp(x=xy.elk,clip.to=wica.gpc)
@
Home range clipped to the park boundary, with the hole excluded:
<<>>=
mcp6 <- hr.mcp(x=xy.elk,clip.to=wica.hole.gpc)
@

The following examples give area of a home range prior to clipping, area after clipping to the park boundary, and area after clipping and deduction of a hole:
<<>>=
mcp1$area/(1000^2)
mcp5$area/(1000^2)
mcp6$area/(1000^2)
@


\section*{Repetitive operations}

In practice, investigators often require estimates for numerous subsets of data.  For example, estimates might be desired for many individuals, for a series of time periods, or both.  One way to add such functionality--but at the expense of generality--is to provide additional arguments or more complex and restrictive input and output.  The alternative (and the approach I've taken) is to promote generality and flexibility by relying, as much as possible, on existing functions like \texttt{for} and \texttt{lapply}.  The following examples demonstrate.\\

Creates an ordered factor that groups the data into 2 subsets of approximately equal size:

<<>>=
grouping.var <- cut(1:nrow(xy.elk),breaks=2,labels=1:2,
  ordered_result=TRUE)
xy <- data.frame(group=grouping.var,xy.elk)
head(xy)
@

Splits the data frame into a list with 1 element for each level of the grouping variable:

<<>>=
groups <- split(xy,f=xy$group)
@

Computes a home range for each element of the list:
<<>>=
hr.list1 <- lapply(groups,function(xy){
  with(xy,hr.mcp(x=x,y=y,clip.to=wica.gpc,plot=FALSE))
  })
@

Results are stored in a list; each component is an object of class \texttt{"hr.mcp"}:

<<>>=
str(hr.list1,strict.width="cut")
@

A similar approach can be used to compute several types of estimates from the same data.  For example, one can compute 75\%, 95\%, and 100\% polygons in a single step:

<<results=hide>>=
exclude.list <- list(0,0.05,0.25)
names(exclude.list) <- c("Exclude 0", "Exclude 0.05", "Exclude 0.25")

hr.list2 <- lapply(exclude.list,function(exclude){
  hr.mcp(xy.elk, exclude=exclude,plot=FALSE)
})
@

\section*{Graphics}

By design, \texttt{hr.mcp} does not support grooming of the plots it produces.  Complete flexibility is provided instead by an associated plotting method (\texttt{plot.hr.mcp}), which is designed to integrate with the R \textsf{graphics} package. The function accepts optional arguments to \texttt{polygon} as well as the \texttt{xlim} and \texttt{ylim} arguments to \texttt{plot}.  An example featuring numerous options and a supporting function (\texttt{point.in.hr}) for classifying points as "in" or "out" of a home range is implemented below and shown in Fig. 4.\\


Compute limits of a plotting region that will encompass the entire study area and all of the data:
<<>>=
xlim <- range(c(xy.elk$x,get.bbox(wica.gpc)$x),na.rm=TRUE)
ylim <- range(c(xy.elk$y,get.bbox(wica.gpc)$y),na.rm=TRUE)
@

Logical vectors identifying points as 1) outside the home range, 2) inside the home range, or 3) vertices of the home range: 
<<>>=
outside <- point.in.hr(x=xy.elk,hr=mcp2)==0
inside <- point.in.hr(x=xy.elk,hr=mcp2)==1
vertex <- point.in.hr(x=xy.elk,hr=mcp2)==3
@

Coordinated use of \texttt{plot.hr.mcp} and the R \textsf{graphics} package can produce virtually any desired result:
<<plot1,fig=T,include=F>>=
plot(mcp2,lty=2,xlim=xlim,ylim=ylim,col="gray",id=FALSE)
points(xy.elk[outside,],col="gray",cex=0.75,pch=19)
points(xy.elk[inside,],col="tan1",cex=0.75,pch=19)
points(xy.elk,cex=0.75)
points(xy.elk[vertex,],col="red",cex=1.2,pch=17)
points(xy.elk[vertex,],cex=1.2,pch=2)
plot(wica.gpc,poly.args=list(lwd=2),add=TRUE)
box()
@

\begin{figure}
\begin{center}
\includegraphics[width=4in,trim= 0 0.5in 0 0, clip]{mcp-plot1}
\caption{A sample plot constructed with \texttt{plot.hr.mcp} and the R \textsf{graphics} package.}
\end{center}
\end{figure}

Special considerations apply when home ranges include holes.  Argument \texttt{'col'} will be disabled, shading of polygons will not be supported, and a warning will be issued.  This restriction prevents overplotting from obscuring features of home ranges.  Shading still can be accomplished with modest effort, by extracting component polygons and holes from home ranges and plotting them in a sensible order (Fig. 5):
<<plot2,fig=T,include=F>>=
hole <- get.pts(mcp6$mcp)[[1]]
poly <- get.pts(mcp6$mcp)[[2]]
plot(mcp6)
polygon(poly$x,poly$y,col="gray")
polygon(hole$x,hole$y,col="white")
box()
@               

\begin{figure}
\begin{center}
\includegraphics[width=3in, trim=0 0.5in 0 0, clip]{mcp-plot2}
\caption{When home ranges include holes, argument \texttt{'col'} is disabled; however, shading can still be accomplished by plotting home range components individually.}
\end{center}
\end{figure}


\section*{References}

\begin{hangparas}{0.1in}{1}

Roger D. Peng with contributions from Duncan Murdoch and Barry Rowlingson; GPC library by Alan Murta (2010). gpclib: General Polygon Clipping Library for R. R package version 1.5-1. http://CRAN.R-project.org/package=gpclib

\end{hangparas}

\end{document}